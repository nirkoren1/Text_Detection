{"version":3,"sources":["Loading.js","ImageCard.js","ImageList.js","ImageUploader.js","App.js","reportWebVitals.js","index.js"],"names":["CircularIndeterminate","React","createElement","Box","sx","display","CircularProgress","MultiActionAreaCard","props","Card","maxWidth","mx","CardActionArea","style","zIndex","bbs","CardMedia","component","image","alt","CardActions","marginTop","Button","size","color","onClick","buttonOne","loadingOrButton","marginLeft","inp","StandardImageList","justifyContent","overflowX","width","ImageList","height","cols","itemData","length","rowHeight","map","item","index","maxHeight","cursor","setImage","img","srcSet","concat","src","title","loading","ImageUploader","useState","previewUrl","setPreviewUrl","setLoadingOrButton","inputElement","useRef","mediaElement","setBbs","imageWidth","setImageWidth","imageHeight","setImageHeight","windowSize","setWindowSize","window","innerWidth","innerHeight","useEffect","handleWindowResize","addEventListener","removeEventListener","detectionImage","listBB","changeToImage","current","files","URL","createObjectURL","detectionButton","changeToDetection","showImageButton","variant","startIcon","CloudUploadIcon","type","ref","onChange","async","e","target","imgObject","Image","onload","filePath","response","fetch","ok","Error","buffer","arrayBuffer","Blob","error","console","message","getBlobFromPath","imagePath","then","blob","fileName","File","createFileFromBlob","marginBottom","alert","newFormData","url","file","Promise","resolve","reject","reader","FileReader","onloadend","result","onerror","readAsDataURL","loadImage","data","formData","method","headers","Content-Type","body","JSON","stringify","json","sendData","data_url","text_bbs","c_height","Math","max","e_i","w","h","x1","y1","text","Tooltip","arrow","top","left","position","padding","border","borderRadius","minHeight","minWidth","App","isDarkMode","setIsDarkMode","document","className","getElementsByTagName","Typography","gutterBottom","textAlign","Link","href","underline","toggleDarkMode","Brightness7Icon","Brightness4Icon","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"mPAIe,SAASA,IACpB,OACEC,IAAAC,cAACC,IAAG,CAACC,GAAI,CAAEC,QAAS,SAClBJ,IAAAC,cAACI,IAAgB,wDCAV,SAASC,EAAoBC,GAC1C,OACEP,IAAAC,cAACO,IAAI,CAACL,GAAI,CAACM,SAAU,IAAKC,GAAI,SAE5BV,IAAAC,cAACU,IAAc,CAACC,MAAO,CAACC,OAAQ,OAC/BN,EAAMO,IACLd,IAAAC,cAACc,IAAS,CACRC,UAAU,MAEVC,MAAOV,EAAMU,MACbC,IAAI,MAMRlB,IAAAC,cAACkB,IAAW,CAAChB,GAAI,CAAEiB,UAAW,SAC5BpB,IAAAC,cAACoB,IAAM,CAACC,KAAK,QAAQC,MAAM,UAAUC,QAASjB,EAAMkB,WAAW,WAG9DlB,EAAMmB,iBAGT1B,IAAAC,cAAA,OAAKE,GAAI,CAAEwB,WAAY,SAAWpB,EAAMqB,6CCzB/B,SAASC,EAAkBtB,GACxC,OACEP,IAAAC,cAAA,OAAKW,MAAO,CAAER,QAAS,OAAQ0B,eAAgB,SAAUC,UAAW,OAAQC,MAAO,SACjFhC,IAAAC,cAACgC,IAAS,CAAC9B,GAAI,CAAE6B,MAAO,MAAOE,OAAQ,KAAOC,KAAMC,EAASC,OAAQC,UAAW,KAC7EF,EAASG,IAAI,CAACC,EAAMC,IAEjBzC,IAAAC,cAAA,OACEW,MAAO,CAAC8B,UAAW,IAAKhC,GAAI,OAAQiC,OAAQ,WAC5CnB,QAASA,IAAMjB,EAAMqC,SAASJ,EAAKK,KACnCC,OAAM,GAAAC,OAAKP,EAAKK,IAAG,8CACnBG,IAAG,GAAAD,OAAKP,EAAKK,IAAG,qCAChB3B,IAAKsB,EAAKS,MACVC,QAAQ,YAStB,MAAMd,EAAW,CACf,CACES,IAAK,cACLI,MAAO,WAET,CACEJ,IAAK,mCACLI,MAAO,gBAET,CACEJ,IAAK,aACLI,MAAO,eAET,CACEJ,IAAK,gBACLI,MAAO,aAET,CACEJ,IAAK,mBACLI,MAAO,OAET,CACEJ,IAAK,iBACLI,MAAO,eAET,CACEJ,IAAK,cACLI,MAAO,UAET,CACEJ,IAAK,aACLI,MAAO,UAET,CACEJ,IAAK,mBACLI,MAAO,gBAET,CACEJ,IAAK,eACLI,MAAO,YAET,CACEJ,IAAK,eACLI,MAAO,YAET,CACEJ,IAAK,WACLI,MAAO,SCkLIE,MAjPf,WACE,MAAOlC,EAAO2B,GAAYQ,mBAAS,OAE5BC,EAAYC,GAAiBF,mBAAS,KACtC1B,EAAiB6B,GAAsBH,mBAAS,IACjDI,EAAeC,iBAAO,MACtBC,EAAeD,iBAAO,OACrB3C,EAAK6C,GAAUP,mBAAS,KACxBQ,EAAYC,GAAiBT,mBAAS,IACtCU,EAAaC,GAAkBX,mBAAS,IACxCY,EAAYC,GAAiBb,mBAAS,CAC3Cc,OAAOC,WACPD,OAAOE,cAGTC,oBAAU,KACR,MAAMC,EAAqBA,KACzBL,EAAc,CAACC,OAAOC,WAAYD,OAAOE,eAK3C,OAFAF,OAAOK,iBAAiB,SAAUD,GAE3B,KACLJ,OAAOM,oBAAoB,SAAUF,KAEtC,IAEH,IAAIG,EAAiB,GACjBC,EAAS,KAEb,MAMMC,EAAgBA,KACRnB,EAAaoB,QAAQC,MAAM,GACvC,IACEvB,EAAcwB,IAAIC,gBAAgB9D,IAClC,MACAqC,EAAcrC,GAIM,IAAlBwD,GACFlB,EAAmByB,IAKvBX,oBAAU,KACRM,KACC,CAAC1D,IAEJ,MAAM+D,EAAkBhF,IAAAC,cAACoB,IAAM,CAACC,KAAK,QAAQC,MAAM,UAAUC,QAzBnCyD,KACxB3B,EAAcmB,GACdlB,EAAmB2B,KAuBoE,kBAIrFA,EAAkBlF,IAAAC,cAACoB,IAAM,CAACC,KAAK,QAAQC,MAAM,UAAUC,QAASmD,GAAe,cAsK/E/C,EAAM5B,IAAAC,cAACoB,IAAM,CAACL,UAAU,QAAQmE,QAAQ,YAAYC,UAAWpF,IAAAC,cAACoF,IAAe,OAAK,cAE1FrF,IAAAC,cAAA,SAAOqF,KAAK,OAAOC,IAAK/B,EAAcgC,SAnJVC,UACxB,GAAIC,EAAEC,OAAOd,OAASa,EAAEC,OAAOd,MAAM,GAAI,CACvC,MAAMhC,EAAM6C,EAAEC,OAAOd,MAAM,GAC3BjC,EAASC,GAET,MAAM+C,EAAY,IAAIC,MAGtBD,EAAU5C,IAAM8B,IAAIC,gBAAgBlC,GAGpC+C,EAAUE,OAAS,MACjBjC,EAAc+B,EAAU5D,OACxB+B,EAAe6B,EAAU1D,UAE3ByB,EAAO,MAoIsD/C,MAAO,CAAER,QAAS,WAGnF,OACEJ,IAAAC,cAAA,WACED,IAAAC,cAAC4B,EAAiB,CAACe,SA9FS6C,WAtChCA,eAA+BM,GAC7B,IAEE,MAAMC,QAAiBC,MAAMF,GAG7B,IAAKC,EAASE,GACZ,MAAM,IAAIC,MAAM,wBAIlB,MAAMC,QAAeJ,EAASK,cAK9B,OAFa,IAAIC,KAAK,CAACF,IAGvB,MAAOG,GAEP,OADAC,QAAQD,MAAM,SAAUA,EAAME,SACvB,OAqBTC,CAAgBC,GACfC,KAAMC,IAEL,MAAMhE,EApBV,SAA4BgE,EAAMC,GAChC,IAOE,OAFa,IAAIC,KAHC,CAACF,GAGcC,EAAU,CAAExB,KAAM,eAGnD,MAAOiB,GAEP,OADAC,QAAQD,MAAM,uBAAwBA,EAAME,SACrC,MASKO,CAAmBH,EAAMF,GACrC/D,EAASC,GAET,MAAM+C,EAAY,IAAIC,MAGtBD,EAAU5C,IAAM2D,EAIhBf,EAAUE,OAAS,MACjBjC,EAAc+B,EAAU5D,OACxB+B,EAAe6B,EAAU1D,UAE3ByB,EAAO,SA6ET3D,IAAAC,cAAA,OAAKW,MAAO,CAACQ,UAAW,OAAQ6F,aAAc,SAC5CjH,IAAAC,cAACK,EAAmB,CAACW,MAAOoC,EAAY5B,UAvDxBgE,UAClB,IAAKxE,EAED,YADAiG,MAAM,iCAIV,MACMC,EAAc,CAACC,UA5HvB,SAAmBC,GACjB,OAAO,IAAIC,QAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAS,IAAIC,WAEnBD,EAAOE,UAAY,MACjBJ,EAAQE,EAAOG,UAGjBH,EAAOI,QAAWtB,KAChBiB,EAAOjB,KAGTkB,EAAOK,cAAcT,KA+GCU,CAAU9G,IAElCsC,EAAmBxD,GACnB,MAAMiI,QAtBRvC,eAAwBwC,GACtB,MAAMjC,QAAiBC,MAAM,2BAA4B,CACvDiC,OAAQ,OACRC,QAAS,CACLC,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUN,KAIvB,aAFmBjC,EAASwC,OAcTC,CAAStB,GAC5B1C,EAAiBuD,EAAKU,SACtBhE,EAASsD,EAAKW,SAId,MACMC,EADU,IACC9E,EAAoBF,EACpBiF,KAAKC,IAFN,IAEmBF,GAEnCjF,EAAO,IACP,IAAK,IAAIoF,EAAM,EAAGA,EAAMrE,EAAOrC,OAAQ0G,IAAO,CAC5C,MAAMC,EANQ,KAMHtE,EAAOqE,GAAK,GAAG,GAAKrE,EAAOqE,GAAK,GAAG,IAAYnF,EACpDqF,GAAKvE,EAAOqE,GAAK,GAAG,GAAKrE,EAAOqE,GAAK,GAAG,IAAIH,EAAS9E,EACrDoF,EARQ,IAQFxE,EAAOqE,GAAK,GAAG,GAAYnF,EACjCuF,EAAKzE,EAAOqE,GAAK,GAAG,GAAGH,EAAS9E,EAChCsF,EAAO1E,EAAOqE,GAAK,GACzBpF,EAAO7C,GAAO,IAAIA,EAAKd,IAAAC,cAACoJ,IAAO,CAACpG,MAAOmG,EAAME,OAAK,GAACtJ,IAAAC,cAAA,OAAKW,MAAO,CAAC2I,IAAG,GAAAxG,OAAMoG,EAAGP,EAAU,IAAG,KACnDY,KAAI,GAAAzG,OAAMmG,EAZlC,IAY8C,IAAG,KACzBO,SAAU,WACV5I,OAAQ,IACR6I,QAAS,MACTC,OAAQ,oBACRC,aAAc,MACdC,UAAW,MACXC,SAAU,MACV5H,OAAM,GAAAa,OAAMkG,EAAEL,EAAU,IAAG,KAC3B5G,MAAK,GAAAe,OAAMiG,EArBnC,IAqB8C,IAAG,WAGjEzF,EAAmByB,IAgB+CtD,gBAAiBA,EAAiBE,IAAKA,EAAKd,IAAKA,EAAKyE,IAAK7B,2DCjMlHqG,MA1Cf,WACE,MAAOC,EAAYC,GAAiB7G,oBAAS,GAa7C,OAXAiB,oBAAU,KAER6F,SAAS7B,KAAK8B,UAAYH,EAAa,YAAc,GACrDE,SAASE,qBAAqB,QAAQ,GAAGxJ,MAAMW,MAAQyI,EAAa,YAAc,OAClFE,SAASE,qBAAqB,QAAQ,GAAGxJ,MAAMW,MAAQyI,EAAa,YAAc,QACjF,CAACA,IAOFhK,IAAAC,cAAA,OAAKkK,UAAU,OACbnK,IAAAC,cAAA,OAAKW,MAAO,CAACkB,eAAgB,SAAU1B,QAAS,SAChDJ,IAAAC,cAACC,IAAG,CAACC,GAAI,CAAE6B,MAAO,MAAOvB,SAAU,IAAKgJ,SAAU,aAChDzJ,IAAAC,cAACoK,IAAU,CAAClF,QAAQ,KAAKmF,cAAY,GAAC,aAGtCtK,IAAAC,cAACoK,IAAU,CAAClF,QAAQ,YAAYmF,cAAY,EAAC1J,MAAO,CAAE2J,UAAW,SAAU,mCAE3EvK,IAAAC,cAACuK,IAAI,CAACC,KAAK,8CAA8CC,UAAU,SAChE,gDAEH1K,IAAAC,cAACoK,IAAU,CAAClF,QAAQ,YAAYmF,cAAY,GAAC,mDACKtK,IAAAC,cAAA,QAAMW,MAAO,CAAEW,MAAO,cAAe,WAAcvB,IAAAC,cAAA,WAAS,aAAUD,IAAAC,cAAA,QAAMW,MAAO,CAAEW,MAAO,SAAU,kBAAqB,gCAM/KvB,IAAAC,cAACoB,IAAM,CAACG,QAvBWmJ,KACrBV,GAAeD,IAsBoBpJ,MAAO,CAAC6I,SAAU,QAASD,KAAM,GAAID,IAAK,KACxES,EAAahK,IAAAC,cAAC2K,IAAe,MAAM5K,IAAAC,cAAC4K,IAAe,OAGtD7K,IAAAC,cAACkD,EAAa,QCnCL2H,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAAvF,EAAA,GAAAkB,KAAAqE,EAAAC,KAAA,WAAqBtE,KAAKuE,IAAiD,IAAhDC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAASL,EACpEC,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,MCDDU,IAASC,WAAWxB,SAASyB,eAAe,SACpDC,OACH5L,IAAAC,cAACD,IAAM6L,WAAU,KACf7L,IAAAC,cAAC8J,EAAG,QAORe","file":"static/js/main.b5e1b97f.chunk.js","sourcesContent":["import CircularProgress from '@mui/material/CircularProgress';\nimport Box from '@mui/material/Box';\nimport React from 'react';\n\nexport default function CircularIndeterminate() {\n    return (\n      <Box sx={{ display: 'flex' }}>\n        <CircularProgress />\n      </Box>\n    );\n  }\n  ","import React from 'react';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Typography from '@mui/material/Typography';\nimport { Button, CardActionArea, CardActions } from '@mui/material';\n\nexport default function MultiActionAreaCard(props) {\n  return (\n    <Card sx={{maxWidth: 448, mx: 'auto'}}>\n      \n      <CardActionArea style={{zIndex: 1001}}>\n      {props.bbs}\n        <CardMedia\n          component=\"img\"\n        //   height=\"140\"\n          image={props.image}\n          alt=''\n        >\n        </CardMedia>\n        \n\n      </CardActionArea>\n      <CardActions sx={{ marginTop: 'auto' }}>\n        <Button size=\"small\" color=\"primary\" onClick={props.buttonOne}>\n          Predict\n        </Button>\n        {props.loadingOrButton}\n        \n      </CardActions>\n      <div sx={{ marginLeft: 'auto' }}>{props.inp}</div>\n    </Card>\n  );\n}","import React from 'react';\nimport ImageList from '@mui/material/ImageList';\nimport ImageListItem from '@mui/material/ImageListItem';\nimport { Button } from '@mui/material';\n\nexport default function StandardImageList(props) {\n  return (\n    <div style={{ display: 'flex', justifyContent: 'center', overflowX: 'auto', width: '100%' }}>\n      <ImageList sx={{ width: '60%', height: 181 }} cols={itemData.length} rowHeight={164}>\n        {itemData.map((item, index) => (\n            // <button key={index} style={{padding: 0, border: 0}}>\n            <img\n              style={{maxHeight: 164, mx: 'auto', cursor: 'pointer'}}\n              onClick={() => props.setImage(item.img)}\n              srcSet={`${item.img}?w=164&h=164&fit=crop&auto=format&dpr=2 2x`}\n              src={`${item.img}?w=164&h=164&fit=crop&auto=format`}\n              alt={item.title}\n              loading=\"lazy\"\n            />\n            // </button>\n        ))}\n      </ImageList>\n    </div>\n  );\n}\n\nconst itemData = [\n  {\n    img: 'grafity.jpg',\n    title: 'grafity',\n  },\n  {\n    img: 'large_andrae-ricketts-346066.jpg',\n    title: 'Times Square',\n  },\n  {\n    img: 'street.jpg',\n    title: 'street sign',\n  },\n  {\n    img: 'mall-shop.jpg',\n    title: 'mall shop',\n  },\n  {\n    img: 'london-buses.jpg',\n    title: 'bus',\n  },\n  {\n    img: 'newspapers.jpg',\n    title: 'news papers',\n  },\n  {\n    img: 'market2.jpg',\n    title: 'market',\n  },\n  {\n    img: 'cheese.jpg',\n    title: 'cheese',\n  },\n  {\n    img: 'books_covers.png',\n    title: 'books_covers',\n  },\n  {\n    img: 'document.jpg',\n    title: 'document',\n  },\n  {\n    img: 'somthing.jpg',\n    title: 'somthing',\n  },\n  {\n    img: 'code.jpg',\n    title: 'code',\n  },\n];\n","import React, { useState, useRef, useEffect } from 'react';\nimport CircularIndeterminate from './Loading'\nimport MultiActionAreaCard from './ImageCard'\nimport { Button } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\nimport Tooltip from '@mui/material/Tooltip';\nimport StandardImageList from './ImageList';\n\n\nfunction ImageUploader() {\n  const [image, setImage] = useState(null);\n  // const [imageString, setImageString] = useState('')\n  const [previewUrl, setPreviewUrl] = useState('');\n  const [loadingOrButton, setLoadingOrButton] = useState('')\n  const inputElement = useRef(null)\n  const mediaElement = useRef(null)\n  const [bbs, setBbs] = useState([])\n  const [imageWidth, setImageWidth] = useState(0);\n  const [imageHeight, setImageHeight] = useState(0);\n  const [windowSize, setWindowSize] = useState([\n    window.innerWidth,\n    window.innerHeight,\n  ]);\n\n  useEffect(() => {\n    const handleWindowResize = () => {\n      setWindowSize([window.innerWidth, window.innerHeight]);\n    };\n\n    window.addEventListener('resize', handleWindowResize);\n\n    return () => {\n      window.removeEventListener('resize', handleWindowResize);\n    };\n  }, []);\n\n  let detectionImage = ''\n  let listBB = null\n\n  const changeToDetection = () => {\n    setPreviewUrl(detectionImage)\n    setLoadingOrButton(showImageButton)\n    return\n  }\n\n  const changeToImage = () => {\n    const img = inputElement.current.files[0]\n    try {\n      setPreviewUrl(URL.createObjectURL(image))\n    } catch {\n      setPreviewUrl(image)\n    }\n      \n\n    if (detectionImage != '')\n      setLoadingOrButton(detectionButton)\n    return\n\n  }\n\n  useEffect(() => {\n    changeToImage()\n  }, [image])\n\n  const detectionButton = <Button size=\"small\" color=\"primary\" onClick={changeToDetection}>\n  Show Detection\n</Button>\n\nconst showImageButton = <Button size=\"small\" color=\"primary\" onClick={changeToImage}>\n  Show Image\n</Button>\n\n  function loadImage(file) {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n  \n      reader.onloadend = () => {\n        resolve(reader.result);\n      };\n  \n      reader.onerror = (error) => {\n        reject(error);\n      };\n  \n      reader.readAsDataURL(file);\n    });\n    }\n\n\n  const handleImageChange = async (e) => {\n    if (e.target.files && e.target.files[0]) {\n      const img = e.target.files[0];\n      setImage(img);\n\n      const imgObject = new Image();\n\n      // Set the source of the Image object to the URL of the image\n      imgObject.src = URL.createObjectURL(img);\n\n      // Set up the onload event to get the width and height once the image is loaded\n      imgObject.onload = () => {\n        setImageWidth(imgObject.width);\n        setImageHeight(imgObject.height);\n      };\n      setBbs([])\n      // changeToImage()\n    }\n  };\n\n  async function getBlobFromPath(filePath) {\n    try {\n      // Fetch the file\n      const response = await fetch(filePath);\n  \n      // Check if the request was successful (status code 200)\n      if (!response.ok) {\n        throw new Error('Failed to fetch file');\n      }\n  \n      // Get the binary data as an ArrayBuffer\n      const buffer = await response.arrayBuffer();\n  \n      // Create a Blob object from the ArrayBuffer\n      const blob = new Blob([buffer]);\n  \n      return blob;\n    } catch (error) {\n      console.error('Error:', error.message);\n      return null;\n    }\n  }\n\n  function createFileFromBlob(blob, fileName) {\n    try {\n      // Create an array-like object with a single Blob\n      const fileArray = [blob];\n  \n      // Create a File object from the array-like object\n      const file = new File(fileArray, fileName, { type: \"image/jpeg\" });\n  \n      return file;\n    } catch (error) {\n      console.error('Error creating File:', error.message);\n      return null;\n    }\n  }\n\n  const handleImageChangeFromEx = async (imagePath) => {\n\n    getBlobFromPath(imagePath)\n    .then((blob) => {\n      // const img = new File(blob, imagePath)\n      const img = createFileFromBlob(blob, imagePath);\n      setImage(img);\n\n      const imgObject = new Image();\n\n      // Set the source of the Image object to the URL of the image\n      imgObject.src = imagePath\n\n\n      // Set up the onload event to get the width and height once the image is loaded\n      imgObject.onload = () => {\n        setImageWidth(imgObject.width);\n        setImageHeight(imgObject.height);\n      };\n      setBbs([])\n    })\n    \n\n    \n    // changeToImage()    \n  };\n\n\n\n  async function sendData(formData) {\n    const response = await fetch('https://ai.kiddo.pro/api', {\n      method: 'POST', \n      headers: {\n          'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(formData),\n     });\n    const data = await response.json();\n    \n    return data;\n  }\n\n  const uploadImage = async () => {\n    if (!image) {\n        alert(\"Please select an image first!\");\n        return;\n    }\n\n    const fileValue = await loadImage(image);\n    const newFormData = {url : fileValue};\n    setLoadingOrButton(CircularIndeterminate)\n    const data = await sendData(newFormData);\n    detectionImage = data.data_url\n    listBB = data.text_bbs\n    // const top = 100\n\n    \n    const c_width = 448\n    const c_height = imageHeight*c_width/imageWidth\n    const max_size = Math.max(c_width, c_height)\n\n    setBbs([])\n    for (let e_i = 0; e_i < listBB.length; e_i++) {\n      const w = (listBB[e_i][0][3] - listBB[e_i][0][1])*c_width/imageWidth\n      const h = (listBB[e_i][0][4] - listBB[e_i][0][2])*c_height/imageHeight\n      const x1 = (listBB[e_i][0][1])*c_width/imageWidth\n      const y1 = listBB[e_i][0][2]*c_height/imageHeight\n      const text = listBB[e_i][1]\n      setBbs(bbs => [...bbs, <Tooltip title={text} arrow><div style={{top: `${(y1/c_height)*100}%`,\n                                            left: `${(x1/c_width)*100}%`,\n                                            position: \"absolute\", \n                                            zIndex: 1000, \n                                            padding: \"0px\",\n                                            border: \"1px solid #00ff00\", // Set the border properties (width, style, and color)\n                                            borderRadius: \"4px\",\n                                            minHeight: \"0px\",\n                                            minWidth: \"0px\",\n                                            height: `${(h/c_height)*100}%`,\n                                            width: `${(w/c_width)*100}%`}}></div></Tooltip>])\n    }\n\n    setLoadingOrButton(detectionButton)\n\n};\n\n\n\nconst inp = <Button component=\"label\" variant=\"contained\" startIcon={<CloudUploadIcon />}>\nUpload file\n<input type=\"file\" ref={inputElement} onChange={handleImageChange} style={{ display: 'none' }}/>\n</Button>\n\n  return (\n    <div>\n      <StandardImageList setImage={handleImageChangeFromEx}></StandardImageList>\n    \n    <div style={{marginTop: '10px', marginBottom: '20px'}}>\n      <MultiActionAreaCard image={previewUrl} buttonOne={uploadImage} loadingOrButton={loadingOrButton} inp={inp} bbs={bbs} ref={mediaElement}></MultiActionAreaCard>\n    </div>\n    </div>\n  );\n}\n\nexport default ImageUploader;","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport ImageUploader from './ImageUploader';\nimport { Button } from '@mui/material';\nimport Brightness4Icon from '@mui/icons-material/Brightness4';\nimport Brightness7Icon from '@mui/icons-material/Brightness7';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Link from '@mui/material/Link';\n\nfunction App() {\n  const [isDarkMode, setIsDarkMode] = useState(false);\n\n  useEffect(() => {\n    // Update body class when isDarkMode changes\n    document.body.className = isDarkMode ? 'dark-mode' : '';\n    document.getElementsByTagName('span')[0].style.color = isDarkMode ? 'lightblue' : 'blue';\n    document.getElementsByTagName('span')[1].style.color = isDarkMode ? 'lightblue' : 'blue';\n  }, [isDarkMode]);\n\n  const toggleDarkMode = () => {\n    setIsDarkMode(!isDarkMode);\n  };\n\n  return (\n    <div className=\"App\">\n      <div style={{justifyContent: 'center', display: 'flex'}}>\n      <Box sx={{ width: '80%', maxWidth: 700, position: 'relative'}}>\n        <Typography variant=\"h2\" gutterBottom>\n          Scene OCR\n        </Typography>\n        <Typography variant=\"subtitle2\" gutterBottom style={{ textAlign: 'left' }}>\n        Demo of Scene-ocr from the repo: \n        <Link href=\"https://github.com/nirkoren1/Text_Detection\" underline=\"hover\">\n          {' https://github.com/nirkoren1/Text_Detection'}\n        </Link>\n        <Typography variant=\"subtitle2\" gutterBottom>\n          click on a picture or upload one, then click on <span style={{ color: 'lightblue' }}>PREDICT</span><br></br> click on <span style={{ color: 'blue' }}>SHOW DETECTION</span> to see the heatmap image\n        </Typography>\n        </Typography>\n        \n      </Box>\n      </div>\n      <Button onClick={toggleDarkMode} style={{position: 'fixed', left: 10, top: 10}}>\n        {isDarkMode ? <Brightness7Icon /> : <Brightness4Icon />}\n      </Button>\n      \n      <ImageUploader />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}